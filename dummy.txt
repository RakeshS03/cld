OPENMPI:

install-sudo apt-get install libopenmpi-dev;  sudo apt-get install openmpi-bin

PROGRAM:
#inlcude<stdio.h>
#include<omp.h>
int main(){
int myid,total_num;
#pragma omp parallel private(myid)
{
myid=omp_get_thread_num();
total_num=omp_get_num_threads();
printf("hello world from %d process out of total process %d",myid,total_num);
}
printf("program ends!");
return 0;
}

COMPILE: gcc -fopenmp hello_world.c -o hello_world.out
RUN: ./hello_world.out

MPICH:

program:
#include<stdio.h>
#include<mpi.h>
int main(int argv,char ** argc){
int rank,size;
{
MPI_Init(NULL,NULL);
MPI_Comm_rank(MPI_COMM_WORLD,&rank);
MPI_Comm_size(MPI_COMM_WORLD,&size);
MPI_Finalize();
printf("HELLO WORLD FROM %d OUT OF TOTAL PROCESDS %d\n",rank,size);
}
printf("program ends");
return 0;
}

COMPILE: mpicc hello.c -o hello
RUN:mpirun -np -4 ./hello

SPARK:
sudo apt update
sudo apt install default-jdk
sudo apt install scala
sudo su
mkdir /opt/spark
cd /opt/spark
wget https://dlcdn.apache.org/spark/spark-3.5.3/spark-3.5.3-bin-hadoop3.tgz
tar xvf spark-3.5.3-bin-hadoop3.tgz
cd
ll
nano .bashrc
SPARK_HOME=/opt/spark/spark-3.5.3-bin-hadoop3
export PATH=$PATH:$SPARK_HOME/bin:$SPARK_HOME/bin
source .bashrc
spark-shell

CODE:

// Set the file paths
val inputFile = "/home/osboxes/Downloads/input.txt"
val outputFile = "/home/osboxes/Downloads/output"

// Load the text file into an RDD
val textFile = sc.textFile(inputFile)

// Split lines into words, flatten the list, and count the words
val wordCount = textFile.flatMap(line => line.split("\\s+")).count()

// Save the word count to a new file
sc.parallelize(Seq(s"Word count: $wordCount")).saveAsTextFile(outputFile)

// Confirm the operation
println(s"Word count: $wordCount saved to $outputFile")


